kind: pipeline
type: kubernetes
name: ses-email-service-lambda

steps:
- name: Zip
  image: kramos/alpine-zip
  commands:
  - zip ./email-blacklist.zip email_blacklist.py

- name: Deploy
  image: liquidfish/aws-cli
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: AWS_ACCESS_KEY_ID
    AWS_DEFAULT_REGION:
      from_secret: AWS_DEFAULT_REGION
    AWS_SECRET_ACCESS_KEY:
      from_secret: AWS_SECRET_ACCESS_KEY
  commands:
  - aws lambda update-function-code --function-name EmailBlacklist --zip-file fileb://./email-blacklist.zip
  - echo "Publishing Lambda version $(aws lambda publish-version --function-name EmailBlacklist | jq -r .Version)"

trigger:
  branch:
  - master

---

kind: pipeline
type: kubernetes
name: ses-email-service

steps:
- name: Build
  image: plugins/docker
  settings:
    repo: liquidfish/ses-email-service
    tags:
      - latest
      - ${DRONE_COMMIT}
    username:
      from_secret: DOCKER_HUB_USERNAME
    password:
      from_secret: DOCKER_HUB_PASSWORD

- name: Deploy
  image: bitnami/kubectl:1.15
  commands:
  - kubectl -n global set image deployment/ses-email-service-deployment ses-email-service=liquidfish/ses-email-service:${DRONE_COMMIT} --record

trigger:
  ref:
  - refs/heads/master

---

kind: pipeline
type: kubernetes
name: discord-webhook

steps:
- name: discord notification
  image: appleboy/drone-discored
  settings:
    webhook_id:
      from_secret: DISCORD_WEBHOOK_ID
    webhook_token:
      from_secret: DISCORD_WEBHOOK_SECRET
    username: LiquidCI
    message: >
      {{#success build.status}}
        build {{build.number}} succeeded.
      {{else}}
        build {{build.number}} failed.
      {{/success}}

when:
  status:
  - success
  - failure
